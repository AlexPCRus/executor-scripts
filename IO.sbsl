@Global
method GetFileName(Path: String): String
    return new File(Path).Name
;

@Global
method GetParentDirectory(Path: String): String
    return new File(Path).Directory.Path
;

@Global
method JoinPath(Path: String, Path1: String): String
    if Path.EndsWith("\\") or Path.EndsWith("/")
        return Path + Path1
    else
        return Path + Files.SeparatorSymbol + Path1
    ;
;

@Global
method JoinPath(Path: String, Path1: String, Path2: String): String
    val Result = JoinPath(Path, Path1)
    return JoinPath(Result, Path2)
;

@Global
method JoinPath(Path: String, Path1: String, Path2: String, Path3: String): String
    val Result = JoinPath(Path, Path1, Path2)
    return JoinPath(Result, Path3)
;

@Global
method PathExists(Path: String): Boolean
    return new File(Path).Exists()
;

@Global
method TempPath(): String
    return ExecutionEnvironment.GetProperty("java.io.tmpdir")    
;

@Global
method ReadFileToEnd(FilePath: String): String
    val File = new File(FilePath)
    use Stream = File.OpenReadableStream()

    return Stream.ReadAsString()   
;

@Global
method WriteTextToFile(FilePath: String, Content: String)
    val File = new File(FilePath)
    use Stream = File.OpenWritableStream()

    Stream.Flush()

    Stream.Write(Content)  
;