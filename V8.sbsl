#required IO.sbsl 
#required Net.sbsl

@Global
enum Arch
    X86,
    X64
;

@Global
structure V8Platform
    var Version: String = ""
    var Architecture: Arch = Arch.X64 
    var BinPath: String = ""
    var ExecutablePath: String = ""
    var HasStandaloneServer: Boolean = False
    var IbsrvPath: String = ""
    var IbcmdPath: String = ""
;

@Global
method GetInstalledPlatforms(): Array<V8Platform>
    val Items = new Array<V8Platform>()

    val OnecRootFolder = new File("1cv8", ExecutionEnvironment.GetVariable("ProgramFiles"))

    val Pattern = new Pattern("\\d+\\.\\d+\\.\\d+\\.\\d+")
    val PlatfromPaths = OnecRootFolder.Children.Filter(c -> Pattern.FindMatches(c.Name, 1).Size() > 0)
    
    for Child in PlatfromPaths
        val Platform = new V8Platform()
        Platform.Version = Child.Name
        Platform.Architecture = Arch.X64
        Platform.BinPath = IO.JoinPath(Child.Path, "bin")
        Platform.ExecutablePath = IO.JoinPath(Platform.BinPath, "1cv8.exe")
        
        val IbsrvExecutable = new File(IO.JoinPath(Platform.BinPath, "ibsrv.exe"))
        if IbsrvExecutable.Exists()
            Platform.HasStandaloneServer = True
            Platform.IbsrvPath = IbsrvExecutable.Path
            Platform.IbcmdPath = IO.JoinPath(Platform.BinPath, "ibcmd.exe")
        ;

        Items.Add(Platform)
    ;

    return Items.SortBy(c -> c.Version)
;

@Global
method GetInstalledPlatform(Version: String = ""): V8Platform?
    if Version == ""
        return GetHighestInstalledPlatform()
    else
        return GetInstalledPlatforms().Filter(c -> c.Version == Version).Last()
    ;
;

@Global
method GetHighestInstalledPlatform(): V8Platform?
    val Platforms = V8.GetInstalledPlatforms()
    return Platforms.Last()
;

@Global
method WaitSshAgentIsStarted(Port: Number = 1545, TimoutSeconds: Number): Boolean
    return Net.LocalPortIsOpen(Port, TimoutSeconds)
;

@Global
method ThrowIfHasNoStandaloneServer(Platform: V8Platform)
    if not Platform.HasStandaloneServer
        throw new IllegalStateException("Platform installation doesn't contains standalone server executable")
    ;
;