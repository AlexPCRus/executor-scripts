#required Common/Logger.sbsl
#required Common/V8Database.sbsl
#required Common/Sql.sbsl
#required Common/V8.sbsl
#required Common/Path.sbsl
#required Common/BatchMode.sbsl
#required Common/Ras.sbsl

method Script(
    Server: String, 
    Infobase: String, 
    User: String, 
    Password: String,
    SqlUser: String,
    SqlPassword: String,
    RequiredVersion: String,
    TemplatesPath: String,
    AccessCode: String,
    PlatformVersion: String = "")
    use Connection = Sql.BuildConnection(Server, Infobase, SqlUser, SqlPassword)
    val Database = V8Database.NewInstance(Connection)
    val ConfigInfo = Database.GetConfigInfo()

    val InfobasePath = "%Server/%Infobase"

    if V8.VersionIsUpper(ConfigInfo.Version, RequiredVersion)
        var CfuPath = Path.Join(TemplatesPath, RequiredVersion.Replace(".", "_"), "1cv8.cfu")

        if Path.Exists(CfuPath)
            Logger.i("Using CFU path: $CfuPath")

            // Copy cfu and start updating from this one, cause it locks the source file and prevent parallel updatings
            val TempUpdateDir = Files.CreateTempDirectory()

            val TempCfu = Path.Join(TempUpdateDir.Path, "1cv8.cfu")
            Files.Copy(CfuPath, TempCfu)

            val UpdInfo = Path.Join(Path.GetParentPath(CfuPath), "UpdInfo.txt")
            val TempUpdInfo = Path.Join(TempUpdateDir.Path, "UpdInfo.txt")
            Files.Copy(UpdInfo, TempUpdInfo)

            CfuPath = TempCfu
        else
            Logger.e("Couldn't find CFU file of required version \"$RequiredVersion\" by path \"%CfuPath\"", True)
        ;

        Logger.i("Blocking connections (%InfobasePath)")
        Ras.BlockConnections(Infobase, User, Password, AccessCode)

        Logger.i("Updating configuration (%InfobasePath)")
        BatchMode.UpdateConfiguration(Server, Infobase, User, Password, AccessCode, CfuPath, PlatformVersion)

        Logger.i("Unblocking connections (%InfobasePath)")
        Ras.UnblockConnections(Infobase, User, Password)
    else
        Logger.i("It doesn't need to update configuration (%InfobasePath, Current: ${ConfigInfo.Version}, Required: %RequiredVersion)")
    ;
;